<Test13.awl> #13 / [1] {

  x_trace:() => 0;
  set:(cmp0, ! (x y) [2] = {
    f_put:((), "<", x, ":", y, ">\n");
    cmp:(x, y) }) => ! (x y) [2] = {
    f_put:((), "<", x, ":", y, ">\n");
    cmp:(x, y) };

<29:19>
<28:19>
<27:19>
<26:19>
<25:19>
<24:19>
<23:19>
<22:19>
<21:19>
<20:19>
<29:19>
<18:19>
<17:19>
<16:19>
<15:19>
<14:19>
<13:19>
<12:19>
<11:19>
<10:19>
<10:14>
<11:14>
<12:14>
<13:14>
<10:14>
<15:14>
<16:14>
<17:14>
<18:14>
<13:11>
<12:11>
<13:11>
<10:11>
<12:13>
<15:16>
<15:16>
<17:16>
<18:16>
<17:18>
<29:24>
<28:24>
<27:24>
<26:24>
<25:24>
<29:24>
<23:24>
<22:24>
<21:24>
<20:24>
<20:21>
<20:21>
<22:21>
<23:21>
<22:23>
<29:27>
<28:27>
<29:27>
<26:27>
<25:27>
<25:26>
<28:29>

  {
    f_put:((), "\n");
    l_sort_index:(cmp0, 10, 30);
    f_put:((), "\n");
    } => ();
  set:(vv, 5, 2, 7, 9, 0, 6, 3, 8, 1, 4) => (5, 2, 7, 9, 0, 6, 3, 8, 1, 4);
  l_sort_index:(! (x y) [2] = cmp:(l_item:(x, .vv), l_item:(y, .vv)), 0, l_len:vv) => (4, 8, 1, 6, 9, 0, 5, 2, 7, 3);
  set:(ww, "sigma", "gamma", "beta", "mu", "psi", "theta", "rho", "zeta", "pi", "epsilon", "alpha", "omega") => ("sigma", "gamma", "beta", "mu", "psi", "theta", "rho", "zeta", "pi", "epsilon", "alpha", "omega");
  set:(ww_i, l_sort_index:(! (x y) [2] = s_cmp:(l_item:(x, .ww), l_item:(y, .ww)), 0, l_len:ww)) => (10, 2, 9, 1, 3, 11, 8, 4, 6, 0, 5, 7);

- alpha
- beta
- epsilon
- gamma
- mu
- omega
- pi
- psi
- rho
- sigma
- theta
- zeta

  {
    f_put:((), "\n");
    l_loop:(w, ww_i, f_put:((), "- ", l_item:(w, ww), "\n"));
    f_put:((), "\n");
    } => ();
  set:(aa, array:(3, 3)) => [3 3];
  a_load:(aa, 77, 22, 44, 11, 33, 88, 66, 99, 55) => [3 3];
  set:(vv_h, ) => ();
  set:(vv_v, ) => ();
  for_inc:(i, (0, 3), {
    l_push:(vv_h, l_sort_index:(! (j k) [2] = cmp:(a_elem:(.aa, .i, j), a_elem:(.aa, .i, k)), 0, 3));
    l_push:(vv_v, l_sort_index:(! (j k) [2] = cmp:(a_elem:(.aa, j, .i), a_elem:(.aa, k, .i)), 0, 3)) }) => ((0, 2, 1), (0, 1, 2), 1, 2, 0);
  vv_h => ((2, 0, 1), (0, 1, 2), 1, 2, 0);
  vv_v => ((0, 2, 1), (0, 1, 2), 1, 2, 0);
  a_save:aa => (77, 22, 44, 11, 33, 88, 66, 99, 55);

} <Test13.awl> #49 / [16]
