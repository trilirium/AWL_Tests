<Test_6.awl> #15 / [1] {

  x_trace:() => 0;
  set:(s1, "Hello!") => "Hello!";
  set:(s2, "Goodbye!") => "Goodbye!";
  let:(r1, s1) => r1;
  reval:r1 => "Hello!";
  let:(r2, s2) => r2;
  reval:r2 => "Goodbye!";
  s_cat:(s_cat:("[... ", "|||"), " ...]") => "[... ||| ...]";
  s_cat:("[", s_cat:(s1, "]")) => "[Hello!]";
  s_cat:(s_cat:("{ ", s1), " }") => "{ Hello! }";
  set:(s, s1) => "Hello!";
  s => "Hello!";
  set:(s, s2) => "Goodbye!";
  s => "Goodbye!";
  set:(s, "no text") => "no text";
  set:(s1, set:(s2, s)) => "no text";
  s1 => "no text";
  s2 => "no text";
  s_cat:("+++", "---") => "+++---";
  s_cat:(s_cat:(s_cat:("[", s1), ", "), s_cat:(s2, "]")) => "[no text, no text]";
  set:(s, s_cat:(set:(s1, "<1111>"), set:(s2, "<2222>"))) => "<1111><2222>";
  s => "<1111><2222>";
  let:(r, s_cat:(s_cat:(s_rep:(reval:r1, 2), " <> "), s_rep:(reval:r2, 3))) => r;
  reval:r => "<1111><1111> <> <2222><2222><2222>";
  set:(Lr, s_len:reval:r) => 34;
  set:(Lr1, s_len:reval:r1) => 6;
  set:(Lr2, s_len:reval:r2) => 6;
  add:(add:(Lr, Lr1), Lr2) => 46;
  sub:(s_len:s_cat:(s_cat:(s_cat:(s_cat:("{ ", s_rep:(reval:r1, 3)), " - "), s_rep:(reval:r2, 4)), " }"), add:(add:(add:(add:(2, mul:(Lr1, 3)), 3), mul:(Lr2, 4)), 2)) => 0;
  set:(p, s_cat:(s_cat:(s_cat:(s_cat:("[:", s_rep:(s_cat:(s_cat:("{", reval:r1), "}"), 2)), " . "), s_rep:(s_cat:(s_cat:("(", reval:r2), ")"), 5)), ":]")) => "[:{<1111>}{<1111>} . (<2222>)(<2222>)(<2222>)(<2222>)(<2222>):]";
  (s_len:p, add:(add:(add:(add:(2, mul:(add:(2, Lr1), 2)), 3), mul:(add:(2, Lr2), 5)), 2)) => (63, 63);
  set:(sl1, "alpha", "beta", "gamma", "delta", "epsilon") => ("alpha", "beta", "gamma", "delta", "epsilon");
  set:(sl2, "Jan", "Feb", "Mar", "Apr", "May") => ("Jan", "Feb", "Mar", "Apr", "May");
  sl1 => ("alpha", "beta", "gamma", "delta", "epsilon");
  sl2 => ("Jan", "Feb", "Mar", "Apr", "May");
  let:(S_0_1_2, s_cat:(s_cat:(s_cat:(s_cat:(l_item:(0, S), "->"), l_item:(1, S)), "->"), l_item:(2, S))) => S_0_1_2;
  let:(join_S, {
    set:(s, "(");
    set:(i, 0);
    while:(lt:(i, l_len:S), set:(s, s_cat:(s_cat:(s, l_item:(inc_p:i, S)), if:(ne:(i, l_len:S), ", ", ""))));
    s_cat:(s, ")") }) => join_S;
  set:(S, sl1) => ("alpha", "beta", "gamma", "delta", "epsilon");
  reval:S_0_1_2 => "alpha->beta->gamma";
  reval:join_S => "(alpha, beta, gamma, delta, epsilon)";
  set:(S, sl2) => ("Jan", "Feb", "Mar", "Apr", "May");
  reval:S_0_1_2 => "Jan->Feb->Mar";
  reval:join_S => "(Jan, Feb, Mar, Apr, May)";
  s_cat:(s_cat:(12.23, 45.56), 78.89) => "12.2345.5678.89";
  set:(i, 0) => 0;
  set:(p, "") => "";
  while:(lt:(inc_p:i, 10), comb:s_cat:(p, s_cat:(s_cat:("[", i), "]"))) => "[1][2][3][4][5][6][7][8][9][10]";
  p => "[1][2][3][4][5][6][7][8][9][10]";
  set:(i, 0) => 0;
  set:(na, i) => 0;
  while:(lt:(inc:i, 10), set:(na, sqr:i, na)) => (3., 2.8284271, 2.6457513, 2.4494897, 2.236068, 2., 1.7320508, 1.4142136, 1., 0);
  na => (3., 2.8284271, 2.6457513, 2.4494897, 2.236068, 2., 1.7320508, 1.4142136, 1., 0);
  set:(S, na) => (3., 2.8284271, 2.6457513, 2.4494897, 2.236068, 2., 1.7320508, 1.4142136, 1., 0);
  reval:S_0_1_2 => "3.->2.8284271->2.6457513";
  reval:join_S => "(3., 2.8284271, 2.6457513, 2.4494897, 2.236068, 2., 1.7320508, 1.4142136, 1., 0)";
  s_min:(mul:(12, 23), mul:(16, 17)) => "272";
  s_max:(mul:(12, 23), mul:(16, 17)) => "276";
  s_min:(s_rep:(22.3, 3), s_rep:(223.1, 2)) => "22.322.322.3";
  s_max:(s_rep:(22.3, 3), s_rep:(223.1, 2)) => "223.1223.1";
  (s_lt:(set:(v1, mul:(2, 1111)), set:(v2, mul:(3, 111))), s_gt:(set:(v3, mul:(4, 1111)), set:(v4, mul:(5, 111)))) => (1, 0);
  mul:("12", "5") => 60;
  add:(mul:("122", "2"), mul:("322", "3")) => 1210;
  (lt:(v1, v2), gt:(v3, v4)) => (0, 1);
  (le:(v1, v3), le:(v2, v4)) => (1, 1);
  (s_ge:(v2, v4), s_ge:(v1, v3)) => (0, 0);
  (v1, v2, v3, v4) => (2222, 333, 4444, 555);
  (s_min:(s_cat:(v1, v2), s_cat:(v3, v4)), s_max:(s_cat:(v3, v4), s_cat:(v1, v2))) => ("2222333", "4444555");
  (s_min:(s_cat:(v2, v3), s_cat:(v1, v4)), s_max:(s_cat:(v4, v1), s_cat:(v3, v2))) => ("2222555", "5552222");
  add:(add:(s_rep:(2, 5), s_rep:(3, 4)), s_rep:(4, 3)) => 25999;
  s_cat:(s_rep:(mul:(13.3, 2), 3), s_rep:(mul:(21.6, 4), 2)) => "26.626.626.686.486.4";
  set:(vv, "0123456789") => "0123456789";

-- []
-- [0]
-- [01]
-- [012]
-- [0123]
-- [01234]
-- [012345]
-- [0123456]
-- [01234567]
-- [012345678]
-- [0123456789]
-- [0123456789]
-- [012345678]
-- [01234567]
-- [0123456]
-- [012345]
-- [01234]
-- [0123]
-- [012]
-- [01]
-- [0]
-- []

  {
    f_put:((), "\n");
    for_inc:(i, (0, 11), f_put:((), "-- [", s_slice:(((), i), vv), "]\n"));
    for_dec:(i, (0, 11), f_put:((), "-- [", s_slice:(((), i), vv), "]\n"));
    f_put:((), "\n");
    } => ();

++ []
++ [9]
++ [89]
++ [789]
++ [6789]
++ [56789]
++ [456789]
++ [3456789]
++ [23456789]
++ [123456789]
++ [0123456789]
++ [0123456789]
++ [123456789]
++ [23456789]
++ [3456789]
++ [456789]
++ [56789]
++ [6789]
++ [789]
++ [89]
++ [9]
++ []

  {
    f_put:((), "\n");
    for_dec:(i, (0, 11), f_put:((), "++ [", s_slice:((i, ), vv), "]\n"));
    for_inc:(i, (0, 11), f_put:((), "++ [", s_slice:((i, ), vv), "]\n"));
    f_put:((), "\n");
    } => ();

<< [          ]
<< [         0]
<< [        01]
<< [       012]
<< [      0123]
<< [     01234]
<< [    012345]
<< [   0123456]
<< [  01234567]
<< [ 012345678]
<< [0123456789]
<< [123456789 ]
<< [23456789  ]
<< [3456789   ]
<< [456789    ]
<< [56789     ]
<< [6789      ]
<< [789       ]
<< [89        ]
<< [9         ]
<< [          ]

  {
    f_put:((), "\n");
    for_inc:(i, (neg:10, 11), f_put:((), "<< [", s_slice:((i, add:(i, 10)), vv), "]\n"));
    f_put:((), "\n");
    } => ();

>> [          ]
>> [9         ]
>> [89        ]
>> [789       ]
>> [6789      ]
>> [56789     ]
>> [456789    ]
>> [3456789   ]
>> [23456789  ]
>> [123456789 ]
>> [0123456789]
>> [ 012345678]
>> [  01234567]
>> [   0123456]
>> [    012345]
>> [     01234]
>> [      0123]
>> [       012]
>> [        01]
>> [         0]
>> [          ]

  {
    f_put:((), "\n");
    for_dec:(i, (0, 21), f_put:((), ">> [", s_slice:((sub:(i, 10), i), vv), "]\n"));
    f_put:((), "\n");
    } => ();
  set:(VV_a, set:(VV_b, "\n")) => "\n";
  for_inc:(i, (0, 11), comb:s_cat:(VV_a, s_cat:(s_cat:(s_cat:(s_slice:(((), i), vv), " "), s_slice:((i, ), vv)), "\n"))) => "\n 0123456789\n0 123456789\n01 23456789\n012 3456789\n0123 456789\n01234 56789\n012345 6789\n0123456 789\n01234567 89\n012345678 9\n0123456789 \n";
  for_dec:(i, (0, 11), comb:s_cat:(VV_b, s_cat:(s_cat:(s_cat:(s_slice:(((), i), vv), " "), s_slice:((i, ), vv)), "\n"))) => "\n0123456789 \n012345678 9\n01234567 89\n0123456 789\n012345 6789\n01234 56789\n0123 456789\n012 3456789\n01 23456789\n0 123456789\n 0123456789\n";


 0123456789
0 123456789
01 23456789
012 3456789
0123 456789
01234 56789
012345 6789
0123456 789
01234567 89
012345678 9
0123456789 

0123456789 
012345678 9
01234567 89
0123456 789
012345 6789
01234 56789
0123 456789
012 3456789
01 23456789
0 123456789
 0123456789

  f_put:((), "\n", VV_a, VV_b, "\n") => 4;
  set:(rr, "1 2 3 4 5 6 7 8 9") => "1 2 3 4 5 6 7 8 9";

= 1
= 1 2
= 1 2 3
= 1 2 3 4
= 1 2 3 4 5
= 1 2 3 4 5 6
= 1 2 3 4 5 6 7
= 1 2 3 4 5 6 7 8
= 1 2 3 4 5 6 7 8 9
= 1 2 3 4 5 6 7 8 9
= 1 2 3 4 5 6 7 8
= 1 2 3 4 5 6 7
= 1 2 3 4 5 6
= 1 2 3 4 5
= 1 2 3 4
= 1 2 3
= 1 2
= 1

  {
    f_put:((), "\n");
    for_inc:(i, 9, f_put:((), "= ", s_slice:(add:(mul:(2, i), 1), rr), "\n"));
    for_dec:(i, 9, f_put:((), "= ", s_slice:(add:(mul:(2, i), 1), rr), "\n"));
    f_put:((), "\n");
    } => ();

    s1 = "<1111>";
    s2 = "<2222>";
    r1 = s1;
    r2 = s2;
    s = "(3., 2.8284271, 2.6457513, 2.4494897, 2.236068, 2., 1.7320508, 1.4142136, 1., 0";
    r = s_cat:(s_cat:(s_rep:(reval:r1, 2), " <> "), s_rep:(reval:r2, 3));
    Lr = 34;
    Lr1 = 6;
    Lr2 = 6;
    p = "[1][2][3][4][5][6][7][8][9][10]";
    sl1 = ("alpha", "beta", "gamma", "delta", "epsilon");
    sl2 = ("Jan", "Feb", "Mar", "Apr", "May");
    S_0_1_2 = s_cat:(s_cat:(s_cat:(s_cat:(l_item:(0, S), "->"), l_item:(1, S)), "->"), l_item:(2, S));
    S = (3., 2.8284271, 2.6457513, 2.4494897, 2.236068, 2., 1.7320508, 1.4142136, 1., 0);
    join_S = {
      set:(s, "(");
      set:(i, 0);
      while:(lt:(i, l_len:S), set:(s, s_cat:(s_cat:(s, l_item:(inc_p:i, S)), if:(ne:(i, l_len:S), ", ", ""))));
      s_cat:(s, ")") };
    i = 0;
    na = (3., 2.8284271, 2.6457513, 2.4494897, 2.236068, 2., 1.7320508, 1.4142136, 1., 0);
    v1 = 2222;
    v2 = 333;
    v3 = 4444;
    v4 = 555;
    vv = "0123456789";
    VV_a = "\n 0123456789\n0 123456789\n01 23456789\n012 3456789\n0123 456789\n01234 56789\n012345 6789\n0123456 789\n01234567 89\n012345678 9\n0123456789 \n";
    VV_b = "\n0123456789 \n012345678 9\n01234567 89\n0123456 789\n012345 6789\n01234 56789\n0123 456789\n012 3456789\n01 23456789\n0 123456789\n 0123456789\n";
    rr = "1 2 3 4 5 6 7 8 9";

  x_vars_ord:() => 25;

} <Test_6.awl> #182 / [82]
