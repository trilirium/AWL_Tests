<Array2.awl> #17 / [1] {

  x_trace:() => 0;
  ! array_dump:(arr) [1] = {
    x_trace:(add:(2, 64), arr);
    f_put:((), "\n");
    } => array_dump:;
  ! expect_str:(S T) [2] = unless:(s_eq:(S, T), f_put:((), "\aMismatch: ", S, " <> ", T, "!\n")) => expect_str:;
  ! expect_blank:(S) [1] = unless:(is_undef:S, f_put:((), "\aNot empty: ", S, "!\n")) => expect_blank:;
  ! verify_2D_array:(array range_R off_R range_C off_C pattern) [8] = for_inc:(R, range_R, for_inc:(C, range_C, if:(l_len:pattern, .expect_str:(apply:(pattern, add:(R, off_R), add:(C, off_C)), a_elem:(array, R, C)), .expect_blank:a_elem:(array, R, C)))) => verify_2D_array:;
  ! verify_2D_clean:(array range_R range_C) [3] = .verify_2D_array:(array, range_R, 0, range_C, 0, ) => verify_2D_clean:;
  set:(do_show, true:()) => 1;
  ! Test_Array2D_Clip:(Rows Cols Pattern) [6] = {
    f_put:((), "\nArray shrink/expand test: [", apply:(Pattern, 0, 0), " -> ", apply:(Pattern, Rows, Cols), "].\n\n");
    set:(.test, array:(Rows, Cols));
    a_init_all:(.test, Pattern);
    if:(.do_show, {
      f_put:((), "\tSource:\n");
      .array_dump:.test;
      });
    .verify_2D_array:(.test, Rows, 0, Cols, 0, Pattern);
    f_put:((), "- Clip bottom/top (", Rows, ")\n");
    for_inc:(R, Rows, {
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (R, Rows), Cols, );
      if:(.do_show, {
	f_put:((), "\tClip (bottom @", R, "):\n");
	.array_dump:.test;
	});
      .verify_2D_array:(.test, sub:(Rows, R), R, Cols, 0, Pattern);
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, sub:(Rows, R), Cols, );
      if:(.do_show, {
	f_put:((), "\tClip (top @", R, "):\n");
	.array_dump:.test;
	});
      .verify_2D_array:(.test, sub:(Rows, R), 0, Cols, 0, Pattern);
      });
    f_put:((), "- Clip right/left (", Cols, ")\n");
    for_inc:(C, Cols, {
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (0, Rows), (C, Cols), );
      if:(.do_show, {
	f_put:((), "\tClip (right @", C, "):\n");
	.array_dump:.test;
	});
      .verify_2D_array:(.test, Rows, 0, sub:(Cols, C), C, Pattern);
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (0, Rows), sub:(Cols, C), );
      if:(.do_show, {
	f_put:((), "\tClip (left @", C, "):\n");
	.array_dump:.test;
	});
      .verify_2D_array:(.test, Rows, 0, sub:(Cols, C), 0, Pattern);
      });
    f_put:((), "- Clip forward diag (", min:(Cols, Rows), ")\n");
    for_inc:(D, min:(Cols, Rows), {
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (D, Rows), (D, Cols), );
      if:(.do_show, {
	f_put:((), "\tClip (left/top @", D, "):\n");
	.array_dump:.test;
	});
      .verify_2D_array:(.test, sub:(Rows, D), D, sub:(Cols, D), D, Pattern);
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, sub:(Rows, D), sub:(Cols, D), );
      if:(.do_show, {
	f_put:((), "\tClip (right/bottom @", D, "):\n");
	.array_dump:.test;
	});
      .verify_2D_array:(.test, sub:(Rows, D), 0, sub:(Cols, D), 0, Pattern);
      });
    f_put:((), "- Clip backward diag (", min:(Cols, Rows), ")\n");
    for_inc:(D, min:(Cols, Rows), {
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (D, Rows), sub:(Cols, D), );
      if:(.do_show, {
	f_put:((), "\tClip (left/bottom @", D, "):\n");
	.array_dump:.test;
	});
      .verify_2D_array:(.test, sub:(Rows, D), D, sub:(Cols, D), 0, Pattern);
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, sub:(Rows, D), (D, Cols), );
      if:(.do_show, {
	f_put:((), "\tClip (right/top @", D, "):\n");
	.array_dump:.test;
	});
      .verify_2D_array:(.test, sub:(Rows, D), 0, sub:(Cols, D), D, Pattern);
      });
    } => Test_Array2D_Clip:;

Array shrink/expand test: [[0:0] -> [5:10]].

	Source:
[5 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
- Clip bottom/top (5)
	Clip (bottom @0):
[5 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (top @0):
[5 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (bottom @1):
[4 10] = [["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (top @1):
[4 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"]]
	Clip (bottom @2):
[3 10] = [["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (top @2):
[3 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"]]
	Clip (bottom @3):
[2 10] = [["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (top @3):
[2 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"]]
	Clip (bottom @4):
[1 10] = [["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (top @4):
[1 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"]]
- Clip right/left (10)
	Clip (right @0):
[5 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (left @0):
[5 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (right @1):
[5 9] = [["[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (left @1):
[5 9] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]"]]
	Clip (right @2):
[5 8] = [["[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (left @2):
[5 8] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]"]]
	Clip (right @3):
[5 7] = [["[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (left @3):
[5 7] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]"]]
	Clip (right @4):
[5 6] = [["[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (left @4):
[5 6] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]"]]
	Clip (right @5):
[5 5] = [["[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (left @5):
[5 5] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]"]]
	Clip (right @6):
[5 4] = [["[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (left @6):
[5 4] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]"]]
	Clip (right @7):
[5 3] = [["[0:7]", "[0:8]", "[0:9]"], ["[1:7]", "[1:8]", "[1:9]"], ["[2:7]", "[2:8]", "[2:9]"], ["[3:7]", "[3:8]", "[3:9]"], ["[4:7]", "[4:8]", "[4:9]"]]
	Clip (left @7):
[5 3] = [["[0:0]", "[0:1]", "[0:2]"], ["[1:0]", "[1:1]", "[1:2]"], ["[2:0]", "[2:1]", "[2:2]"], ["[3:0]", "[3:1]", "[3:2]"], ["[4:0]", "[4:1]", "[4:2]"]]
	Clip (right @8):
[5 2] = [["[0:8]", "[0:9]"], ["[1:8]", "[1:9]"], ["[2:8]", "[2:9]"], ["[3:8]", "[3:9]"], ["[4:8]", "[4:9]"]]
	Clip (left @8):
[5 2] = [["[0:0]", "[0:1]"], ["[1:0]", "[1:1]"], ["[2:0]", "[2:1]"], ["[3:0]", "[3:1]"], ["[4:0]", "[4:1]"]]
	Clip (right @9):
[5 1] = [["[0:9]"], ["[1:9]"], ["[2:9]"], ["[3:9]"], ["[4:9]"]]
	Clip (left @9):
[5 1] = [["[0:0]"], ["[1:0]"], ["[2:0]"], ["[3:0]"], ["[4:0]"]]
- Clip forward diag (5)
	Clip (left/top @0):
[5 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (right/bottom @0):
[5 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (left/top @1):
[4 9] = [["[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (right/bottom @1):
[4 9] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]"]]
	Clip (left/top @2):
[3 8] = [["[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (right/bottom @2):
[3 8] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]"]]
	Clip (left/top @3):
[2 7] = [["[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (right/bottom @3):
[2 7] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]"]]
	Clip (left/top @4):
[1 6] = [["[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (right/bottom @4):
[1 6] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]"]]
- Clip backward diag (5)
	Clip (left/bottom @0):
[5 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (right/top @0):
[5 10] = [["[0:0]", "[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]", "[4:9]"]]
	Clip (left/bottom @1):
[4 9] = [["[1:0]", "[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]"], ["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]", "[4:8]"]]
	Clip (right/top @1):
[4 9] = [["[0:1]", "[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:1]", "[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"], ["[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]", "[3:8]", "[3:9]"]]
	Clip (left/bottom @2):
[3 8] = [["[2:0]", "[2:1]", "[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]"], ["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]", "[3:7]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]", "[4:7]"]]
	Clip (right/top @2):
[3 8] = [["[0:2]", "[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:2]", "[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"], ["[2:2]", "[2:3]", "[2:4]", "[2:5]", "[2:6]", "[2:7]", "[2:8]", "[2:9]"]]
	Clip (left/bottom @3):
[2 7] = [["[3:0]", "[3:1]", "[3:2]", "[3:3]", "[3:4]", "[3:5]", "[3:6]"], ["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]", "[4:6]"]]
	Clip (right/top @3):
[2 7] = [["[0:3]", "[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"], ["[1:3]", "[1:4]", "[1:5]", "[1:6]", "[1:7]", "[1:8]", "[1:9]"]]
	Clip (left/bottom @4):
[1 6] = [["[4:0]", "[4:1]", "[4:2]", "[4:3]", "[4:4]", "[4:5]"]]
	Clip (right/top @4):
[1 6] = [["[0:4]", "[0:5]", "[0:6]", "[0:7]", "[0:8]", "[0:9]"]]
  Test_Array2D_Clip:(5, 10, ! (r c) [2] = s_cat:(s_cat:(s_cat:(s_cat:("[", r), ":"), c), "]")) => ();
  ! Test_Array2D_Displace:(Rows Cols Pattern) [6] = {
    f_put:((), "\nArray displace test: [", apply:(Pattern, 0, 0), " -> ", apply:(Pattern, Rows, Cols), "].\n\n");
    set:(.test, array:(Rows, Cols));
    a_init_all:(.test, Pattern);
    if:(.do_show, {
      f_put:((), "\tSource:\n");
      .array_dump:.test;
      });
    .verify_2D_array:(.test, Rows, 0, Cols, 0, Pattern);
    f_put:((), "- Displace bottom/top (", Rows, ")\n");
    for_inc:(R, Rows, {
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (R, add:(Rows, R)), Cols, );
      if:(.do_show, {
	f_put:((), "\tDisplace (bottom @", R, "):\n");
	.array_dump:.test;
	});
      .verify_2D_array:(.test, sub:(Rows, R), R, Cols, 0, Pattern);
      .verify_2D_clean:(.test, (sub:(Rows, R), Rows), Cols);
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (neg:R, sub:(Rows, R)), Cols, );
      if:(.do_show, {
	f_put:((), "\tDisplace (top @", R, "):\n");
	.array_dump:.test;
	});
      .verify_2D_clean:(.test, R, Cols);
      .verify_2D_array:(.test, (R, Rows), neg:R, Cols, 0, Pattern);
      });
    f_put:((), "- Displace right/left (", Cols, ")\n");
    for_inc:(C, Cols, {
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, Rows, (C, add:(Cols, C)), );
      if:(.do_show, {
	f_put:((), "\tDisplace (right @", C, "):\n");
	.array_dump:.test;
	});
      .verify_2D_array:(.test, Rows, 0, sub:(Cols, C), C, Pattern);
      .verify_2D_clean:(.test, Rows, sub:(Cols, C), Cols);
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, Rows, (neg:C, sub:(Cols, C)), );
      if:(.do_show, {
	f_put:((), "\tDisplace (left @", C, "):\n");
	.array_dump:.test;
	});
      .verify_2D_clean:(.test, Rows, C);
      .verify_2D_array:(.test, Rows, 0, (C, Cols), neg:C, Pattern);
      });
    f_put:((), "- Displace forward diag (", min:(Cols, Rows), ")\n");
    for_inc:(D, min:(Cols, Rows), {
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (D, add:(Rows, D)), (D, add:(Cols, D)), );
      if:(.do_show, {
	f_put:((), "\tDisplace (left/top @", D, "):\n");
	.array_dump:.test;
	});
      .verify_2D_array:(.test, sub:(Rows, D), D, sub:(Cols, D), D, Pattern);
      .verify_2D_clean:(.test, Rows, sub:(Cols, D), Cols);
      .verify_2D_clean:(.test, (sub:(Rows, D), Rows), Cols);
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (neg:D, sub:(Rows, D)), (neg:D, sub:(Cols, D)), );
      if:(.do_show, {
	f_put:((), "\tDisplace (right/bottom @", D, "):\n");
	.array_dump:.test;
	});
      .verify_2D_clean:(.test, Rows, D);
      .verify_2D_clean:(.test, D, Cols);
      .verify_2D_array:(.test, (D, Rows), neg:D, (D, Cols), neg:D, Pattern);
      });
    f_put:((), "- Displace backward diag (", min:(Cols, Rows), ")\n");
    for_inc:(D, min:(Cols, Rows), {
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (D, add:(Rows, D)), (neg:D, sub:(Cols, D)), );
      if:(.do_show, {
	f_put:((), "\tDisplace (left/bottom @", D, "):\n");
	.array_dump:.test;
	});
      .verify_2D_clean:(.test, Rows, D);
      .verify_2D_array:(.test, sub:(Rows, D), D, (D, Cols), neg:D, Pattern);
      .verify_2D_clean:(.test, (sub:(Rows, D), Rows), Cols);
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (neg:D, sub:(Rows, D)), (D, add:(Cols, D)), );
      if:(.do_show, {
	f_put:((), "\tDisplace (right/top @", D, "):\n");
	.array_dump:.test;
	});
      .verify_2D_clean:(.test, D, Cols);
      .verify_2D_array:(.test, (D, Rows), neg:D, sub:(Cols, D), D, Pattern);
      .verify_2D_clean:(.test, Rows, sub:(Cols, D), Cols);
      });
    } => Test_Array2D_Displace:;

Array displace test: [0<>0 -> 6<>8].

	Source:
[6 8] = [["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"]]
- Displace bottom/top (6)
	Displace (bottom @0):
[6 8] = [["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"]]
	Displace (top @0):
[6 8] = [["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"]]
	Displace (bottom @1):
[6 8] = [["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"], [(), (), (), (), (), (), (), ()]]
	Displace (top @1):
[6 8] = [[(), (), (), (), (), (), (), ()], ["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"]]
	Displace (bottom @2):
[6 8] = [["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
	Displace (top @2):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], ["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"]]
	Displace (bottom @3):
[6 8] = [["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
	Displace (top @3):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], ["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"]]
	Displace (bottom @4):
[6 8] = [["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
	Displace (top @4):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], ["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"]]
	Displace (bottom @5):
[6 8] = [["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
	Displace (top @5):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], ["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"]]
- Displace right/left (8)
	Displace (right @0):
[6 8] = [["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"]]
	Displace (left @0):
[6 8] = [["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"]]
	Displace (right @1):
[6 8] = [["0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7", ()], ["1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7", ()], ["2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7", ()], ["3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7", ()], ["4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7", ()], ["5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7", ()]]
	Displace (left @1):
[6 8] = [[(), "0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6"], [(), "1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6"], [(), "2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6"], [(), "3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6"], [(), "4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6"], [(), "5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6"]]
	Displace (right @2):
[6 8] = [["0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7", (), ()], ["1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7", (), ()], ["2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7", (), ()], ["3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7", (), ()], ["4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7", (), ()], ["5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7", (), ()]]
	Displace (left @2):
[6 8] = [[(), (), "0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5"], [(), (), "1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5"], [(), (), "2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5"], [(), (), "3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5"], [(), (), "4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5"], [(), (), "5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5"]]
	Displace (right @3):
[6 8] = [["0<>3", "0<>4", "0<>5", "0<>6", "0<>7", (), (), ()], ["1<>3", "1<>4", "1<>5", "1<>6", "1<>7", (), (), ()], ["2<>3", "2<>4", "2<>5", "2<>6", "2<>7", (), (), ()], ["3<>3", "3<>4", "3<>5", "3<>6", "3<>7", (), (), ()], ["4<>3", "4<>4", "4<>5", "4<>6", "4<>7", (), (), ()], ["5<>3", "5<>4", "5<>5", "5<>6", "5<>7", (), (), ()]]
	Displace (left @3):
[6 8] = [[(), (), (), "0<>0", "0<>1", "0<>2", "0<>3", "0<>4"], [(), (), (), "1<>0", "1<>1", "1<>2", "1<>3", "1<>4"], [(), (), (), "2<>0", "2<>1", "2<>2", "2<>3", "2<>4"], [(), (), (), "3<>0", "3<>1", "3<>2", "3<>3", "3<>4"], [(), (), (), "4<>0", "4<>1", "4<>2", "4<>3", "4<>4"], [(), (), (), "5<>0", "5<>1", "5<>2", "5<>3", "5<>4"]]
	Displace (right @4):
[6 8] = [["0<>4", "0<>5", "0<>6", "0<>7", (), (), (), ()], ["1<>4", "1<>5", "1<>6", "1<>7", (), (), (), ()], ["2<>4", "2<>5", "2<>6", "2<>7", (), (), (), ()], ["3<>4", "3<>5", "3<>6", "3<>7", (), (), (), ()], ["4<>4", "4<>5", "4<>6", "4<>7", (), (), (), ()], ["5<>4", "5<>5", "5<>6", "5<>7", (), (), (), ()]]
	Displace (left @4):
[6 8] = [[(), (), (), (), "0<>0", "0<>1", "0<>2", "0<>3"], [(), (), (), (), "1<>0", "1<>1", "1<>2", "1<>3"], [(), (), (), (), "2<>0", "2<>1", "2<>2", "2<>3"], [(), (), (), (), "3<>0", "3<>1", "3<>2", "3<>3"], [(), (), (), (), "4<>0", "4<>1", "4<>2", "4<>3"], [(), (), (), (), "5<>0", "5<>1", "5<>2", "5<>3"]]
	Displace (right @5):
[6 8] = [["0<>5", "0<>6", "0<>7", (), (), (), (), ()], ["1<>5", "1<>6", "1<>7", (), (), (), (), ()], ["2<>5", "2<>6", "2<>7", (), (), (), (), ()], ["3<>5", "3<>6", "3<>7", (), (), (), (), ()], ["4<>5", "4<>6", "4<>7", (), (), (), (), ()], ["5<>5", "5<>6", "5<>7", (), (), (), (), ()]]
	Displace (left @5):
[6 8] = [[(), (), (), (), (), "0<>0", "0<>1", "0<>2"], [(), (), (), (), (), "1<>0", "1<>1", "1<>2"], [(), (), (), (), (), "2<>0", "2<>1", "2<>2"], [(), (), (), (), (), "3<>0", "3<>1", "3<>2"], [(), (), (), (), (), "4<>0", "4<>1", "4<>2"], [(), (), (), (), (), "5<>0", "5<>1", "5<>2"]]
	Displace (right @6):
[6 8] = [["0<>6", "0<>7", (), (), (), (), (), ()], ["1<>6", "1<>7", (), (), (), (), (), ()], ["2<>6", "2<>7", (), (), (), (), (), ()], ["3<>6", "3<>7", (), (), (), (), (), ()], ["4<>6", "4<>7", (), (), (), (), (), ()], ["5<>6", "5<>7", (), (), (), (), (), ()]]
	Displace (left @6):
[6 8] = [[(), (), (), (), (), (), "0<>0", "0<>1"], [(), (), (), (), (), (), "1<>0", "1<>1"], [(), (), (), (), (), (), "2<>0", "2<>1"], [(), (), (), (), (), (), "3<>0", "3<>1"], [(), (), (), (), (), (), "4<>0", "4<>1"], [(), (), (), (), (), (), "5<>0", "5<>1"]]
	Displace (right @7):
[6 8] = [["0<>7", (), (), (), (), (), (), ()], ["1<>7", (), (), (), (), (), (), ()], ["2<>7", (), (), (), (), (), (), ()], ["3<>7", (), (), (), (), (), (), ()], ["4<>7", (), (), (), (), (), (), ()], ["5<>7", (), (), (), (), (), (), ()]]
	Displace (left @7):
[6 8] = [[(), (), (), (), (), (), (), "0<>0"], [(), (), (), (), (), (), (), "1<>0"], [(), (), (), (), (), (), (), "2<>0"], [(), (), (), (), (), (), (), "3<>0"], [(), (), (), (), (), (), (), "4<>0"], [(), (), (), (), (), (), (), "5<>0"]]
- Displace forward diag (6)
	Displace (left/top @0):
[6 8] = [["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"]]
	Displace (right/bottom @0):
[6 8] = [["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"]]
	Displace (left/top @1):
[6 8] = [["1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7", ()], ["2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7", ()], ["3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7", ()], ["4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7", ()], ["5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7", ()], [(), (), (), (), (), (), (), ()]]
	Displace (right/bottom @1):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), "0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6"], [(), "1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6"], [(), "2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6"], [(), "3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6"], [(), "4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6"]]
	Displace (left/top @2):
[6 8] = [["2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7", (), ()], ["3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7", (), ()], ["4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7", (), ()], ["5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7", (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
	Displace (right/bottom @2):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), "0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5"], [(), (), "1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5"], [(), (), "2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5"], [(), (), "3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5"]]
	Displace (left/top @3):
[6 8] = [["3<>3", "3<>4", "3<>5", "3<>6", "3<>7", (), (), ()], ["4<>3", "4<>4", "4<>5", "4<>6", "4<>7", (), (), ()], ["5<>3", "5<>4", "5<>5", "5<>6", "5<>7", (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
	Displace (right/bottom @3):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), "0<>0", "0<>1", "0<>2", "0<>3", "0<>4"], [(), (), (), "1<>0", "1<>1", "1<>2", "1<>3", "1<>4"], [(), (), (), "2<>0", "2<>1", "2<>2", "2<>3", "2<>4"]]
	Displace (left/top @4):
[6 8] = [["4<>4", "4<>5", "4<>6", "4<>7", (), (), (), ()], ["5<>4", "5<>5", "5<>6", "5<>7", (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
	Displace (right/bottom @4):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), "0<>0", "0<>1", "0<>2", "0<>3"], [(), (), (), (), "1<>0", "1<>1", "1<>2", "1<>3"]]
	Displace (left/top @5):
[6 8] = [["5<>5", "5<>6", "5<>7", (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
	Displace (right/bottom @5):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), "0<>0", "0<>1", "0<>2"]]
- Displace backward diag (6)
	Displace (left/bottom @0):
[6 8] = [["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"]]
	Displace (right/top @0):
[6 8] = [["0<>0", "0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7"], ["1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7"], ["2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7"], ["3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7"], ["4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7"], ["5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6", "5<>7"]]
	Displace (left/bottom @1):
[6 8] = [[(), "1<>0", "1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6"], [(), "2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6"], [(), "3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6"], [(), "4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6"], [(), "5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5", "5<>6"], [(), (), (), (), (), (), (), ()]]
	Displace (right/top @1):
[6 8] = [[(), (), (), (), (), (), (), ()], ["0<>1", "0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7", ()], ["1<>1", "1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7", ()], ["2<>1", "2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7", ()], ["3<>1", "3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7", ()], ["4<>1", "4<>2", "4<>3", "4<>4", "4<>5", "4<>6", "4<>7", ()]]
	Displace (left/bottom @2):
[6 8] = [[(), (), "2<>0", "2<>1", "2<>2", "2<>3", "2<>4", "2<>5"], [(), (), "3<>0", "3<>1", "3<>2", "3<>3", "3<>4", "3<>5"], [(), (), "4<>0", "4<>1", "4<>2", "4<>3", "4<>4", "4<>5"], [(), (), "5<>0", "5<>1", "5<>2", "5<>3", "5<>4", "5<>5"], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
	Displace (right/top @2):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], ["0<>2", "0<>3", "0<>4", "0<>5", "0<>6", "0<>7", (), ()], ["1<>2", "1<>3", "1<>4", "1<>5", "1<>6", "1<>7", (), ()], ["2<>2", "2<>3", "2<>4", "2<>5", "2<>6", "2<>7", (), ()], ["3<>2", "3<>3", "3<>4", "3<>5", "3<>6", "3<>7", (), ()]]
	Displace (left/bottom @3):
[6 8] = [[(), (), (), "3<>0", "3<>1", "3<>2", "3<>3", "3<>4"], [(), (), (), "4<>0", "4<>1", "4<>2", "4<>3", "4<>4"], [(), (), (), "5<>0", "5<>1", "5<>2", "5<>3", "5<>4"], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
	Displace (right/top @3):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], ["0<>3", "0<>4", "0<>5", "0<>6", "0<>7", (), (), ()], ["1<>3", "1<>4", "1<>5", "1<>6", "1<>7", (), (), ()], ["2<>3", "2<>4", "2<>5", "2<>6", "2<>7", (), (), ()]]
	Displace (left/bottom @4):
[6 8] = [[(), (), (), (), "4<>0", "4<>1", "4<>2", "4<>3"], [(), (), (), (), "5<>0", "5<>1", "5<>2", "5<>3"], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
	Displace (right/top @4):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], ["0<>4", "0<>5", "0<>6", "0<>7", (), (), (), ()], ["1<>4", "1<>5", "1<>6", "1<>7", (), (), (), ()]]
	Displace (left/bottom @5):
[6 8] = [[(), (), (), (), (), "5<>0", "5<>1", "5<>2"], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
	Displace (right/top @5):
[6 8] = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], ["0<>5", "0<>6", "0<>7", (), (), (), (), ()]]
  Test_Array2D_Displace:(6, 8, ! (r c) [2] = s_cat:(s_cat:(r, "<>"), c)) => ();
  ! Test_Array2D_ExpImp:(Rows Cols Pattern) [5] = {
    f_put:((), "\nArray 2D explode/implode test: [", apply:(Pattern, 0, 0), " -> ", apply:(Pattern, Rows, Cols), "].\n\n");
    set:(.test, array:(Rows, Cols));
    a_init_all:(.test, Pattern);
    if:(.do_show, {
      f_put:((), "\tSource:\n");
      .array_dump:.test;
      });
    .verify_2D_array:(.test, Rows, 0, Cols, 0, Pattern);
    set:(N, min:(idiv:(Rows, 2), idiv:(Cols, 2)));
    f_put:((), "- Implode (", add:(N, 1), ")\n");
    for_inc:(n, add:(N, 1), {
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (n, sub:(Rows, n)), (n, sub:(Cols, n)), );
      if:(.do_show, {
	f_put:((), "\tImplode (@", n, "):\n");
	.array_dump:.test;
	});
      .verify_2D_array:(.test, sub:(Rows, mul:(2, n)), n, sub:(Cols, mul:(2, n)), n, Pattern);
      });
    f_put:((), "- Explode (", add:(N, 1), ")\n");
    for_inc:(n, add:(N, 1), {
      set:(.test, array:(Rows, Cols));
      a_init_all:(.test, Pattern);
      a_reshape:(.test, (neg:n, add:(Rows, n)), (neg:n, add:(Cols, n)), );
      if:(.do_show, {
	f_put:((), "\tExplode (@", n, "):\n");
	.array_dump:.test;
	});
      .verify_2D_clean:(.test, Rows, n);
      .verify_2D_clean:(.test, n, Cols);
      .verify_2D_array:(.test, (n, add:(Rows, n)), neg:n, (n, add:(Cols, n)), neg:n, Pattern);
      .verify_2D_clean:(.test, Rows, range:(add:(Cols, n), n));
      .verify_2D_clean:(.test, range:(add:(Rows, n), n), Cols);
      });
    } => Test_Array2D_ExpImp:;

Array 2D explode/implode test: [{ 0.0 } -> { 5.7 }].

	Source:
[5 7] = [["{ 0.0 }", "{ 0.1 }", "{ 0.2 }", "{ 0.3 }", "{ 0.4 }", "{ 0.5 }", "{ 0.6 }"], ["{ 1.0 }", "{ 1.1 }", "{ 1.2 }", "{ 1.3 }", "{ 1.4 }", "{ 1.5 }", "{ 1.6 }"], ["{ 2.0 }", "{ 2.1 }", "{ 2.2 }", "{ 2.3 }", "{ 2.4 }", "{ 2.5 }", "{ 2.6 }"], ["{ 3.0 }", "{ 3.1 }", "{ 3.2 }", "{ 3.3 }", "{ 3.4 }", "{ 3.5 }", "{ 3.6 }"], ["{ 4.0 }", "{ 4.1 }", "{ 4.2 }", "{ 4.3 }", "{ 4.4 }", "{ 4.5 }", "{ 4.6 }"]]
- Implode (3)
	Implode (@0):
[5 7] = [["{ 0.0 }", "{ 0.1 }", "{ 0.2 }", "{ 0.3 }", "{ 0.4 }", "{ 0.5 }", "{ 0.6 }"], ["{ 1.0 }", "{ 1.1 }", "{ 1.2 }", "{ 1.3 }", "{ 1.4 }", "{ 1.5 }", "{ 1.6 }"], ["{ 2.0 }", "{ 2.1 }", "{ 2.2 }", "{ 2.3 }", "{ 2.4 }", "{ 2.5 }", "{ 2.6 }"], ["{ 3.0 }", "{ 3.1 }", "{ 3.2 }", "{ 3.3 }", "{ 3.4 }", "{ 3.5 }", "{ 3.6 }"], ["{ 4.0 }", "{ 4.1 }", "{ 4.2 }", "{ 4.3 }", "{ 4.4 }", "{ 4.5 }", "{ 4.6 }"]]
	Implode (@1):
[3 5] = [["{ 1.1 }", "{ 1.2 }", "{ 1.3 }", "{ 1.4 }", "{ 1.5 }"], ["{ 2.1 }", "{ 2.2 }", "{ 2.3 }", "{ 2.4 }", "{ 2.5 }"], ["{ 3.1 }", "{ 3.2 }", "{ 3.3 }", "{ 3.4 }", "{ 3.5 }"]]
	Implode (@2):
[1 3] = [["{ 2.2 }", "{ 2.3 }", "{ 2.4 }"]]
- Explode (3)
	Explode (@0):
[5 7] = [["{ 0.0 }", "{ 0.1 }", "{ 0.2 }", "{ 0.3 }", "{ 0.4 }", "{ 0.5 }", "{ 0.6 }"], ["{ 1.0 }", "{ 1.1 }", "{ 1.2 }", "{ 1.3 }", "{ 1.4 }", "{ 1.5 }", "{ 1.6 }"], ["{ 2.0 }", "{ 2.1 }", "{ 2.2 }", "{ 2.3 }", "{ 2.4 }", "{ 2.5 }", "{ 2.6 }"], ["{ 3.0 }", "{ 3.1 }", "{ 3.2 }", "{ 3.3 }", "{ 3.4 }", "{ 3.5 }", "{ 3.6 }"], ["{ 4.0 }", "{ 4.1 }", "{ 4.2 }", "{ 4.3 }", "{ 4.4 }", "{ 4.5 }", "{ 4.6 }"]]
	Explode (@1):
[7 9] = [[(), (), (), (), (), (), (), (), ()], [(), "{ 0.0 }", "{ 0.1 }", "{ 0.2 }", "{ 0.3 }", "{ 0.4 }", "{ 0.5 }", "{ 0.6 }", ()], [(), "{ 1.0 }", "{ 1.1 }", "{ 1.2 }", "{ 1.3 }", "{ 1.4 }", "{ 1.5 }", "{ 1.6 }", ()], [(), "{ 2.0 }", "{ 2.1 }", "{ 2.2 }", "{ 2.3 }", "{ 2.4 }", "{ 2.5 }", "{ 2.6 }", ()], [(), "{ 3.0 }", "{ 3.1 }", "{ 3.2 }", "{ 3.3 }", "{ 3.4 }", "{ 3.5 }", "{ 3.6 }", ()], [(), "{ 4.0 }", "{ 4.1 }", "{ 4.2 }", "{ 4.3 }", "{ 4.4 }", "{ 4.5 }", "{ 4.6 }", ()], [(), (), (), (), (), (), (), (), ()]]
	Explode (@2):
[9 11] = [[(), (), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), (), ()], [(), (), "{ 0.0 }", "{ 0.1 }", "{ 0.2 }", "{ 0.3 }", "{ 0.4 }", "{ 0.5 }", "{ 0.6 }", (), ()], [(), (), "{ 1.0 }", "{ 1.1 }", "{ 1.2 }", "{ 1.3 }", "{ 1.4 }", "{ 1.5 }", "{ 1.6 }", (), ()], [(), (), "{ 2.0 }", "{ 2.1 }", "{ 2.2 }", "{ 2.3 }", "{ 2.4 }", "{ 2.5 }", "{ 2.6 }", (), ()], [(), (), "{ 3.0 }", "{ 3.1 }", "{ 3.2 }", "{ 3.3 }", "{ 3.4 }", "{ 3.5 }", "{ 3.6 }", (), ()], [(), (), "{ 4.0 }", "{ 4.1 }", "{ 4.2 }", "{ 4.3 }", "{ 4.4 }", "{ 4.5 }", "{ 4.6 }", (), ()], [(), (), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), (), ()]]
  Test_Array2D_ExpImp:(5, 7, ! (r c) [2] = s_cat:(s_cat:(s_cat:(s_cat:("{ ", r), "."), c), " }")) => ();

} <Array2.awl> #374 / [13]
