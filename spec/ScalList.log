<ScalList.awl> #17 / [1] {

  x_trace:() => 0;
  set:(ListF, 11.2, 22.4, 33.6, 44.8) => (11.2, 22.4, 33.6, 44.8);
  set:(ListI, 1015, 2025, 3035) => (1015, 2025, 3035);
  set:(ListS1, "Spring", "Summer", "Autumn", "Winter") => ("Spring", "Summer", "Autumn", "Winter");
  set:(ListS2, "Aa", "Ee", "Ii", "Oo", "Uu") => ("Aa", "Ee", "Ii", "Oo", "Uu");
  ListF => (11.2, 22.4, 33.6, 44.8);
  add:ListF => (33.6, 33.6, 44.8);
  add:add:ListF => (67.2, 44.8);
  add:add:add:ListF => 112.;
  ListI => (1015, 2025, 3035);
  add:ListI => (3040, 3035);
  add:add:ListI => 6075;
  neg:ListF => (-11.2, 22.4, 33.6, 44.8);
  not:ListI => (-1016, 2025, 3035);
  s_len:ListS1 => (6, "Summer", "Autumn", "Winter");
  s_len:ListS2 => (2, "Ee", "Ii", "Oo", "Uu");
  ListS1 => ("Spring", "Summer", "Autumn", "Winter");
  s_cat:ListS1 => ("SpringSummer", "Autumn", "Winter");
  s_cat:s_cat:ListS1 => ("SpringSummerAutumn", "Winter");
  s_cat:s_cat:s_cat:ListS1 => "SpringSummerAutumnWinter";
  ListS2 => ("Aa", "Ee", "Ii", "Oo", "Uu");
  s_cat:ListS2 => ("AaEe", "Ii", "Oo", "Uu");
  s_cat:s_cat:ListS2 => ("AaEeIi", "Oo", "Uu");
  s_cat:s_cat:s_cat:ListS2 => ("AaEeIiOo", "Uu");
  s_cat:s_cat:s_cat:s_cat:ListS2 => "AaEeIiOoUu";
  s_cat:s_cat:ListI => "101520253035";
  s_cat:s_cat:s_cat:ListF => "11.222.433.644.8";
  add:(100, ListI) => (1115, 2025, 3035);
  add:(100, add:(200, add:ListI)) => (3340, 3035);
  mul:(0.25, ListF) => (2.8, 22.4, 33.6, 44.8);
  mul:(3.5, mul:(5., mul:ListF)) => (4390.4, 33.6, 44.8);
  s_cat:("+", ListS1) => ("+Spring", "Summer", "Autumn", "Winter");
  s_cat:("*", s_cat:("$", s_cat:ListS2)) => ("*$AaEe", "Ii", "Oo", "Uu");
  set:(i, 12) => 12;
  comb:add:(i, ListI) => (1027, 2025, 3035);
  i => (1027, 2025, 3035);
  set:(f, 10.1) => 10.1;
  comb:mul:(f, ListF) => (113.12, 22.4, 33.6, 44.8);
  f => (113.12, 22.4, 33.6, 44.8);
  set:((s1, s2), "XXX", "YYY") => ("XXX", "YYY");
  comb:s_cat:(s1, ListS1) => ("XXXSpring", "Summer", "Autumn", "Winter");
  comb:s_cat:(s2, ListS2) => ("YYYAa", "Ee", "Ii", "Oo", "Uu");
  add:(ListI, ListF) => (1026.2, 22.4, 33.6, 44.8);
  add:(ListF, ListI) => (1026.2, 2025, 3035);
  mul:(ListI, ListF) => (11368., 22.4, 33.6, 44.8);
  mul:(ListF, ListI) => (11368., 2025, 3035);
  s_cat:(ListI, ListS1) => ("1015Spring", "Summer", "Autumn", "Winter");
  s_cat:(ListF, ListS2) => ("11.2Aa", "Ee", "Ii", "Oo", "Uu");
  reduce:add:ListI => 6075;
  reduce:mul:ListF => 377644.65;
  reduce:s_cat:ListS1 => "SpringSummerAutumnWinter";
  reduce:s_cat:ListS2 => "AaEeIiOoUu";
  reduce:s_cat:ListI => "101520253035";
  reduce:s_cat:ListF => "11.222.433.644.8";
  reduce:add:(add:(mul:(10, 2), 1), add:(mul:(12, 3), 2), add:(mul:(14, 7), 9)) => 166;
  reduce:s_cat:("<", s_cat:(s_cat:("[", s_rep:("()", 4)), "]"), " == ", s_cat:(s_cat:("{", s_rep:("<->", 3)), "}"), ">") => "<[()()()()] == {<-><-><->}>";
  reduce:add:("11aA", "22Cc", "33Ee", "44Gg") => 110;
  reduce:mul:("1.1aA", "2.2Cc", "3.3Ee", "4.4Gg") => 35.1384;
  mul:(mul:(mul:(1.1, 2.2), 3.3), 4.4) => 35.1384;
  add:(add:(1, 2, 3), add:(4, 5, 6)) => (12, 6);
  add:(add:(4, 5, 6), add:(1, 2, 3)) => (12, 3);
  s_cat:(s_cat:("aa", "bb", "cc"), s_cat:("Xx", "Yy", "Zz")) => ("aabbXxYy", "Zz");
  s_cat:(s_cat:("Xx", "Yy", "Zz"), s_cat:("aa", "bb", "cc")) => ("XxYyaabb", "cc");

} <ScalList.awl> #116 / [63]
